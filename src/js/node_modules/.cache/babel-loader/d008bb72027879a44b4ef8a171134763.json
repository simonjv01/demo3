{"ast":null,"code":"var _jsxFileName = \"/Users/simonvargas/demo3/src/js/src/App.js\";\nimport React, { Component } from 'react';\nimport Container from './Container';\nimport './App.css';\nimport { getAllStudents } from './client';\nimport { Table, Spin, Avatar, Icon } from 'antd';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      students: [],\n      isFetching: false\n    };\n\n    this.fetchStudents = () => {\n      this.setState({\n        isFetching: true\n      });\n      getAllStudents().then(res => res.json().then(students => {\n        console.log(students);\n        this.setState({\n          students,\n          isFetching: false\n        });\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStudents();\n  }\n\n  render() {\n    const {\n      students,\n      isFetching\n    } = this.state;\n\n    if (isFetching) {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Spin, {\n        indicator: getIndicatorIcon(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    if (students && students.length) {\n      const columns = [{\n        title: '',\n        key: 'avatar',\n        render: (text, student) => /*#__PURE__*/React.createElement(Avatar, {\n          size: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }\n        }, `${student.firstName.charAt(0).toUpperCase()}${student.lastName.charAt(0).toUpperCase()}`)\n      }, {\n        title: 'Student Id',\n        dataIndex: 'studentId',\n        key: 'studentId'\n      }, {\n        title: 'First Name',\n        dataIndex: 'firstName',\n        key: 'firstName'\n      }, {\n        title: 'Last Name',\n        dataIndex: 'lastName',\n        key: 'lastName'\n      }, {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email'\n      }, {\n        title: 'Gender',\n        dataIndex: 'gender',\n        key: 'gender'\n      }];\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        dataSource: students,\n        columns: columns,\n        rowKey: \"studentId\",\n        pagination: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"No Students found\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/simonvargas/demo3/src/js/src/App.js"],"names":["React","Component","Container","getAllStudents","Table","Spin","Avatar","Icon","App","state","students","isFetching","fetchStudents","setState","then","res","json","console","log","componentDidMount","render","getIndicatorIcon","length","columns","title","key","text","student","firstName","charAt","toUpperCase","lastName","dataIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Container from './Container';\nimport './App.css';\nimport { getAllStudents } from './client'; \nimport {\n  Table,\n  Spin,\n  Avatar,\n  Icon\n}  from 'antd';\n\n\n\nclass App extends Component {\n\n  state = {\n    students: [],\n    isFetching: false\n  }\n\n  componentDidMount () {\n    this.fetchStudents();\n\n  }\n\n  fetchStudents = () => {\n    this.setState({\n      isFetching: true\n    });\n    getAllStudents()\n    .then(res => res.json()\n    .then(students => {\n      console.log(students);\n      this.setState({\n        students,\n        isFetching: false\n      });\n    }));\n  }\n  \n  render() {\n    \n   \n\n    const { students, isFetching } = this.state;\n\n    if (isFetching) {\n      return (\n        <Container>\n          <Spin indicator={getIndicatorIcon()}/>\n        </Container>\n      );\n    }\n\n    if (students && students.length) {\n\n      const columns = [\n        {\n          title: '',\n          key: 'avatar',\n          render: (text, student) => (\n            <Avatar size='large'>\n              {`${student.firstName.charAt(0).toUpperCase()}${student.lastName.charAt(0).toUpperCase()}`}\n\n            </Avatar>\n          )\n        },\n        {\n          title: 'Student Id',\n          dataIndex: 'studentId',\n          key: 'studentId'\n        },\n        {\n          title: 'First Name',\n          dataIndex: 'firstName',\n          key: 'firstName'\n        },\n        {\n        title: 'Last Name',\n        dataIndex: 'lastName',\n        key: 'lastName'\n        },\n        {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email'\n      },\n      {\n        title: 'Gender',\n        dataIndex: 'gender',\n        key: 'gender'\n      }\n      ];\n      return (\n      \n      <Container>\n      <Table \n      dataSource={students} \n      columns={columns} \n      rowKey='studentId'\n      pagination={false} />\n\n      </Container>\n      );\n\n    }\n  \n     return <h1>No Students found</h1>\n    \n  }\n   \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}